# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

APP_NAME = "Chatty"
SCHEME = "Chatty-QA"

KEYCHAIN_NAME = ENV["KEYCHAIN_NAME"]
KEYCHAIN_PASSWORD = ENV["KEYCHAIN_PASSWORD"]
SLACK_WEBHOOK_URL = ENV["SLACK_WEBHOOK_URL"]

default_platform(:ios)

platform :ios do
  # ✅ 인증서를 키체인에 저장
  desc "Save To Keychain"
  lane :set_keychain do |options|
    create_keychain(
      name: "#{KEYCHAIN_NAME}",
      password: "#{KEYCHAIN_PASSWORD}",
      default_keychain: true,
      unlock: true,
      timeout: 3600,
      lock_when_sleeps: true
    )

    import_certificate(
      certificate_path: "Tuist/Signing/release.cer",
      keychain_name: "#{KEYCHAIN_NAME}",
      keychain_password: "#{KEYCHAIN_PASSWORD}"
    )

    import_certificate(
      certificate_path: "Tuist/Signing/release.p12",
      keychain_name: "#{KEYCHAIN_NAME}",
      keychain_password: "#{KEYCHAIN_PASSWORD}"
    )

    install_provisioning_profile(path: "Tuist/Signing/#{APP_NAME}-QA.Release.mobileprovision")
  end

  # ✅ 테스트 플라이트 업로드
  desc "Push to TestFlight"
  lane :QA do |options|
    # ✅ 프로비저닝 프로파일 설치
    install_provisioning_profile(path: "Tuist/Signing/#{APP_NAME}-QA.QA.mobileprovision")

    # ✅ 앱스토어 커넥트 키 연결
    app_store_connect_api_key(is_key_content_base64: true, in_house: false)

    # ✅ 버전 및 빌드 번호 가져오기
    version_number = get_version_number(xcodeproj: "Projects/App/#{APP_NAME}.xcodeproj", target: "#{SCHEME}")
    build_number = latest_testflight_build_number(app_identifier: "org.chattylab.chatty.qa") + 1

    # ✅ 빌드 넘버 증가
    increment_build_number(
      xcodeproj: "Projects/App/#{APP_NAME}.xcodeproj",
      build_number: build_number
    )

    # ✅ 빌드
    build_app(
      workspace: "#{APP_NAME}.xcworkspace",
      scheme: "#{SCHEME}",
      export_method: "app-store"
    )

    # ✅ 테스트 플라이트 업로드
    upload_to_testflight(skip_waiting_for_build_processing: true)

    # ✅ 슬랙으로 배포 완료 알림 보내기
    slack(
      username: "TestFlight",
      message: "🎉 업로드 완료 🎉",
      icon_url: "https://i.namu.wiki/i/xCVs03_2Y3BRAJwG6z8GDvZMF26Smofr1XeNS11ADh0a1YZuzTRwaanF77JVQP-cCwaJ464kxXZTbw5KTB0vbSEc4tjqjH8rffRpNKmAwMee57ZXWn0cHxE2jH7K-3y4mxad4UB-Tn_eHG0IMo6cQQ.webp",
      slack_url: "#{SLACK_WEBHOOK_URL}",
      payload: { "Version": version_number + "(" + build_number.to_s + ")" }
    )
  end
end
